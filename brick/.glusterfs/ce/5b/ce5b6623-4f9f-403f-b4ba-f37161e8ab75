name: transmission

on:
  push:
    branches: [ master ]
    paths:
      - '.github/workflows/transmission.yml'
      - '!transmission/**'
  repository_dispatch:
    types: transmission-build

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Prepare
        id: prepare
        run: |
          VERSION=${{ github.event.client_payload.version }}
          [[ ! -n $VERSION ]] && VERSION="3.00"
          IMAGE_NAME=transmission
          DOCKER_PLATFORMS=linux/386,linux/amd64,linux/arm64,linux/arm/v6,linux/arm/v7,linux/ppc64le,linux/s390x
          echo ::set-output name=buildx_args::--platform ${DOCKER_PLATFORMS} \
            --tag gists/${IMAGE_NAME}:latest \
            --tag gists/${IMAGE_NAME}:${VERSION} \
            -f ./${IMAGE_NAME}/Dockerfile \
            ./${IMAGE_NAME}
      - name: Set up Docker Buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v3
      - name: Buildx (build)
        run: |
          docker buildx build \
            --output "type=image,push=false" ${{ steps.prepare.outputs.buildx_args }}
      - name: Login to Docker Hub Registry
        if: success()
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
        run: echo "${DOCKERHUB_PASSWORD}" | docker login -u "${DOCKERHUB_USERNAME}" --password-stdin
      - name: Buildx (push)
        if: success()
        run: |
          docker buildx build \
            --output "type=image,push=true" ${{ steps.prepare.outputs.buildx_args }}
      - name: Clear
        if: always()
        run: |
          rm -rf ${HOME}.docker/config.json
