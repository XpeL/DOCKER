version: '3.8'


networks:
  elk:
    external: true

configs:

  elastic_config:
    file: ./elasticsearch/config/elasticsearch.yml
  logstash_config:
    file: ./logstash/config/logstash.yml
  logstash_pipeline:
    file: ./logstash/pipeline/logstash.conf
  kibana_config:
    file: ./kibana/config/kibana.yml
    
services:

  elasticsearch:
    image: ind3x/rpi-elasticsearch:latest
    configs:
      - source: elastic_config
        target: /usr/share/elasticsearch/config/elasticsearch.yml
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: changeme
      # Use single node discovery in order to disable production mode and avoid bootstrap checks
      # see https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node
    networks:
      - elk
    deploy:
      replicas: 1
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 64M
      placement:
        constraints:
          - node.role == worker
        preferences:
          - spread: node.id

  logstash:
    image: ind3x/rpi-logstash:latest
    command: logstash -f /etc/logstash/conf.d/logstash.conf
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - elk
    volumes:
      - ./logstash/pipeline:/etc/logstash/conf.d
    deploy:
      replicas: 1
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 64M
      placement:
        constraints:
          - node.role == worker
        preferences:
          - spread: node.id

  logspout:
    image: nieleyde/rpi-logspout
    command:
      syslog://logstash:5000
    depends_on:
      - logstash
    networks:
      - elk
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
        delay: 10s
        window: 5s
      resources:
        limits:
          memory: 64M
        reservations:
          memory: 64M

  kibana:
    image: ind3x/rpi-kibana:latest
    ports:
      - "5601:5601"
    configs:
      - source: kibana_config
        target: /usr/share/kibana/config/kibana.yml
    networks:
      - elk
    deploy:
      replicas: 1
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 64M
      placement:
        constraints:
          - node.role == worker
        preferences:
          - spread: node.id


    
